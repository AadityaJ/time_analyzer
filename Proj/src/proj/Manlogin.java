/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proj;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aaditya
 */

public class Manlogin extends javax.swing.JFrame {
    // managers analysis table
    // conatins the whole date_log table
    /**
     * Creates new form Manlogin
     */
    public Manlogin() {
        initComponents();
    }
    private static final String USERNAME="root";
    private static final String PASSWORD="1234";
    private static final String CONN_STRING="jdbc:mysql://localhost:3306/time_analyzer?autoReconnect=true&useSSL=false";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private String ReturnType(int type_id){
        switch(type_id){
            case 1: return "Design";
            case 2: return "Testing";
            case 3: return "Coding";
            case 4: return "Management";
            case 5: return "Algorithms";
            case 6: return "UI/UX";
            default: return "Others";
        }
    }    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Start = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Date_log = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Top_emp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TypeBest = new javax.swing.JTable();

        jButton1.setText("jButton1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Start.setText("Start");
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        Date_log.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Date", "Hours Worked"
            }
        ));
        jScrollPane1.setViewportView(Date_log);

        jLabel1.setText("Most Working Employee");

        Top_emp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Top_empActionPerformed(evt);
            }
        });

        jLabel2.setText("Most Working Employee By Type");

        TypeBest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Type", "Name"
            }
        ));
        jScrollPane4.setViewportView(TypeBest);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(Start))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(66, 66, 66)
                                .addComponent(Top_emp, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Start)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Top_emp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public String[][] date_log = new String[5000][3];
    public String[][] mod_date_log = new String[5000][4];
    
    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        Connection conn = null;
        try{
            conn = DriverManager.getConnection(CONN_STRING,USERNAME,PASSWORD);
            Statement stmt =(Statement) conn.createStatement();
            String print_name;
            print_name = "SELECT * FROM date_log ;";
            ResultSet rs = stmt.executeQuery(print_name);
            int i=0;
            while(rs.next()){
                date_log[i][0]=(rs.getString("emp_id"));
                date_log[i][1]=(rs.getString("date"));
                date_log[i][2]=(rs.getString("hours_worked"));
                i++;
            }
            //let it run first
            for(int j=0;j<i;j++){
                System.out.println(date_log[j][0]+date_log[j][1]+date_log[j][2]);
                Object[] row = {date_log[j][0],date_log[j][1],date_log[j][2]};
                DefaultTableModel model = (DefaultTableModel) Date_log.getModel();
            
            model.addRow(row);
            }
            Top_emp.setText(getBestEmployee(i));
            print_name = "Select emp_id,Name,sum(hours),type_id from Employee natural join date_log group by emp_id;";
            rs=stmt.executeQuery(print_name);
            i=0;
            while(rs.next()){
                mod_date_log[i][0] = rs.getString("emp_id");
                mod_date_log[i][1] = rs.getString("Name");
                mod_date_log[i][2] = rs.getString("sum(hours)");
                mod_date_log[i][3] = rs.getString("type_id");
                i++;
            }
            // find out the best of all
            for(int j=1;j<=6;j++){
                int index;
                index = getBestType(Integer.toString(j),i);
                //System.out.println(mod_date_log[index][0]+mod_date_log[index][1]+mod_date_log[index][2]+mod_date_log[index][3]);
                Object[] row = {ReturnType(Integer.parseInt(mod_date_log[index][3])),mod_date_log[index][1]};
                DefaultTableModel model = (DefaultTableModel) TypeBest.getModel();
                model.addRow(row);
            }
        }
            
        catch(SQLException e){
            System.out.println("Didnot happen"+e);
        }

    }//GEN-LAST:event_StartActionPerformed

    private int getBestType(String type_id,int len){
        int max=0;
        int in=0;
        for(int i=0;i<len;i++){
            if((mod_date_log[i][3]).equals(type_id))
                if(max<Integer.parseInt(mod_date_log[i][2])){
                    max=Integer.parseInt(mod_date_log[i][2]);
                    in=i;
                }
        }
        return in;
    }
    private String getBestEmployee(int len){
        int[] tot=new int[5];
        int id;
        for(int i=0;i<len;i++){
            switch(date_log[i][0]){
                case "1001": tot[0]+=Integer.parseInt(date_log[i][2]);break;
                case "1002": tot[1]+=Integer.parseInt(date_log[i][2]);break;
                case "1003": tot[2]+=Integer.parseInt(date_log[i][2]);break;
                case "1004": tot[3]+=Integer.parseInt(date_log[i][2]);break;
                case "1005": tot[4]+=Integer.parseInt(date_log[i][2]);break;
            } 
        }
        int max=0;
        String id_picked=new String();
        for(int i=0;i<5;i++){
            if(tot[i]>max){
                max=tot[i];
                id_picked=Integer.toString(1000+i+1);
            }
        }
        return id_picked;
    }
    private void Top_empActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Top_empActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Top_empActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manlogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manlogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manlogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manlogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manlogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Date_log;
    private javax.swing.JButton Start;
    private javax.swing.JTextField Top_emp;
    private javax.swing.JTable TypeBest;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
